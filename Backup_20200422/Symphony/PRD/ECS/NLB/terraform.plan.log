[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.aws_vpc.vpc_id: Refreshing state...[0m
[0m[1mdata.aws_subnet_ids.subnet_ids: Refreshing state...[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cloudwatch_event_rule.cron_minute[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_rule" "cron_minute" {
      [32m+[0m [0m[1m[0marn[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m          = true
      [32m+[0m [0m[1m[0mname[0m[0m                = "cron-min-Sym-Kan-PRD-WebApp"
      [32m+[0m [0m[1m[0mschedule_expression[0m[0m = "rate(1 minute)"
    }

[1m  # aws_cloudwatch_event_target.static_lb_updater_443[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_target" "static_lb_updater_443" {
      [32m+[0m [0m[1m[0marn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mrule[0m[0m      = "cron-min-Sym-Kan-PRD-WebApp"
      [32m+[0m [0m[1m[0mtarget_id[0m[0m = "Sym-Kan-PRD-WebApp-port443"
    }

[1m  # aws_cloudwatch_event_target.static_lb_updater_80[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_target" "static_lb_updater_80" {
      [32m+[0m [0m[1m[0marn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mrule[0m[0m      = "cron-min-Sym-Kan-PRD-WebApp"
      [32m+[0m [0m[1m[0mtarget_id[0m[0m = "Sym-Kan-PRD-WebApp-port80"
    }

[1m  # aws_iam_role.static_lb_lambda[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "static_lb_lambda" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "lambda.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "For lamba function NLB-to-ALB"
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "lambdaFunction-NLB-to-ALB-role-Sym-Kan-PRD-WebApp"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)
    }

[1m  # aws_iam_role_policy.static_lb_lambda[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "static_lb_lambda" {
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m   = "lambdaFunction-NLB-to-ALB-policy-Sym-Kan-PRD-WebApp"
      [32m+[0m [0m[1m[0mpolicy[0m[0m = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:*",
                        ]
                      [32m+[0m [0mSid      = "LambdaLogging"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "S3"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:RegisterTargets",
                          [32m+[0m [0m"elasticloadbalancing:DeregisterTargets",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "ChangeTargetGroups"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"elasticloadbalancing:DescribeTargetHealth",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "DescribeTargetGroups"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"cloudwatch:putMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "CloudWatch"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mrole[0m[0m   = (known after apply)
    }

[1m  # aws_lambda_function.static_lb_updater_443[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "static_lb_updater_443" {
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                       = "populate_NLB_TG_with_ALB.zip"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "Sym-Kan-PRD-WebApp-Populate-NLB-with-ALB-HTTPS"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "populate_NLB_TG_with_ALB.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 128
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python2.7"
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = "2VFJMYuGw9hECQ+syDwg3PLzXD3Ro0o9IFb2rfBZcdQ="
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 300
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = (known after apply)
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }
    }

[1m  # aws_lambda_function.static_lb_updater_80[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "static_lb_updater_80" {
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                       = "populate_NLB_TG_with_ALB.zip"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "Sym-Kan-PRD-WebApp-Populate-NLB-with-ALB-HTTP"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "populate_NLB_TG_with_ALB.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 128
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python2.7"
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = "2VFJMYuGw9hECQ+syDwg3PLzXD3Ro0o9IFb2rfBZcdQ="
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 300
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = (known after apply)
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }
    }

[1m  # aws_lambda_permission.allow_cloudwatch_443[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_permission" "allow_cloudwatch_443" {
      [32m+[0m [0m[1m[0maction[0m[0m        = "lambda:InvokeFunction"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m = "Sym-Kan-PRD-WebApp-Populate-NLB-with-ALB-HTTPS"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mprincipal[0m[0m     = "events.amazonaws.com"
      [32m+[0m [0m[1m[0msource_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstatement_id[0m[0m  = "AllowExecutionFromCloudWatch"
    }

[1m  # aws_lambda_permission.allow_cloudwatch_80[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_permission" "allow_cloudwatch_80" {
      [32m+[0m [0m[1m[0maction[0m[0m        = "lambda:InvokeFunction"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m = "Sym-Kan-PRD-WebApp-Populate-NLB-with-ALB-HTTP"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mprincipal[0m[0m     = "events.amazonaws.com"
      [32m+[0m [0m[1m[0msource_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstatement_id[0m[0m  = "AllowExecutionFromCloudWatch"
    }

[1m  # aws_lb.app_public[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb" "app_public" {
      [32m+[0m [0m[1m[0marn[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdns_name[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0menable_cross_zone_load_balancing[0m[0m = false
      [32m+[0m [0m[1m[0menable_deletion_protection[0m[0m       = false
      [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0minternal[0m[0m                         = false
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_type[0m[0m               = "network"
      [32m+[0m [0m[1m[0mname[0m[0m                             = "Sym-Kan-PRD-WebApp-NLB"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                          = [
          [32m+[0m [0m"subnet-0a7893a240ead65f7",
          [32m+[0m [0m"subnet-0f14641bf3d02ce57",
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m                             = {
          [32m+[0m [0m"app_version"      = "3.4.0"
          [32m+[0m [0m"backup_frequency" = "Never"
          [32m+[0m [0m"billing_type"     = "Client"
          [32m+[0m [0m"client_name"      = "Kansas"
          [32m+[0m [0m"environment_name" = "Production"
          [32m+[0m [0m"project_name"     = "Symphony"
          [32m+[0m [0m"security_zone"    = "DMZ"
          [32m+[0m [0m"service_role"     = "ECS"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mzone_id[0m[0m                          = (known after apply)

      [32m+[0m [0msubnet_mapping {
          [32m+[0m [0m[1m[0mallocation_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m     = (known after apply)
        }
    }

[1m  # aws_lb_listener.app_public_443[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "app_public_443" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 443
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "TCP"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }
    }

[1m  # aws_lb_listener.app_public_80[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "app_public_80" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 80
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "TCP"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }
    }

[1m  # aws_lb_target_group.app_public_443[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_public_443" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = 300
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = "Sym-Kan-PRD-WebApp-TCP443"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 443
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "TCP"
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags[0m[0m                               = {
          [32m+[0m [0m"app_version"      = "3.4.0"
          [32m+[0m [0m"backup_frequency" = "Never"
          [32m+[0m [0m"billing_type"     = "Client"
          [32m+[0m [0m"client_name"      = "Kansas"
          [32m+[0m [0m"environment_name" = "Production"
          [32m+[0m [0m"project_name"     = "Symphony"
          [32m+[0m [0m"security_zone"    = "DMZ"
          [32m+[0m [0m"service_role"     = "ECS"
        }
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "ip"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = "vpc-0b91f680b7588b87f"

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0minterval[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = (known after apply)
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }
    }

[1m  # aws_lb_target_group.app_public_80[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_public_80" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = 300
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = "Sym-Kan-PRD-WebApp-TCP80"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 80
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "TCP"
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags[0m[0m                               = {
          [32m+[0m [0m"app_version"      = "3.4.0"
          [32m+[0m [0m"backup_frequency" = "Never"
          [32m+[0m [0m"billing_type"     = "Client"
          [32m+[0m [0m"client_name"      = "Kansas"
          [32m+[0m [0m"environment_name" = "Production"
          [32m+[0m [0m"project_name"     = "Symphony"
          [32m+[0m [0m"security_zone"    = "DMZ"
          [32m+[0m [0m"service_role"     = "ECS"
        }
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "ip"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = "vpc-0b91f680b7588b87f"

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0minterval[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = (known after apply)
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }
    }

[1m  # aws_s3_bucket.static_lb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "static_lb" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = "sym-kan-prd-webapp-lambda-alb2nlb-us-east-1"
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = "us-east-1"
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = true
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = false
        }
    }

[0m[1mPlan:[0m 15 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

