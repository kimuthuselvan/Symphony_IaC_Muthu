# pull in the dns zone
data "aws_route53_zone" "my_hosted_zone" {
  name         = var.dns_hosted_zone
}


# Create health check for internal application
resource "aws_route53_health_check" "albhealthcheck" {
  fqdn              = var.nlb_dns_name
  port              = 443
  type              = "HTTPS"
  resource_path     = "/"
  failure_threshold = "5"
  request_interval  = "30"

  tags = {
    Name = "Primary-${var.dns_hosted_zone}"
  }
}

resource "aws_route53_health_check" "s3healthcheck" {
  fqdn              = "${var.s3_bucket_name}.s3-website-${var.region_name}.amazonaws.com"
  port              = 80
  type              = "HTTP"
  resource_path     = "/"
  failure_threshold = "5"
  request_interval  = "30"

  tags = {
    Name = "Secondary-${var.dns_hosted_zone}"
  }
}


# Create A-records for live and maintenance page
resource "aws_route53_record" "live" {
  zone_id = data.aws_route53_zone.my_hosted_zone.zone_id
  type    = "CNAME"
  name    = "live"
  ttl     = "60"
  records = ["${var.nlb_dns_name}"]
}

resource "aws_route53_record" "maintenance" {
  zone_id = data.aws_route53_zone.my_hosted_zone.zone_id
  type    = "CNAME"
  name    = "maintenance"
  ttl     = "60"
  records = ["http://${var.s3_bucket_name}.s3-website-${var.region_name}.amazonaws.com"]
}

# Create A-records for main page with health checks
resource "aws_route53_record" "main" {
   zone_id          = data.aws_route53_zone.my_hosted_zone.zone_id
   name             = var.dns_prefix
   type             = "CNAME"
   ttl              = "60"
   depends_on       = [aws_route53_health_check.albhealthcheck]
   health_check_id = aws_route53_health_check.albhealthcheck.id
   failover_routing_policy {
       type = "PRIMARY"
   }
   set_identifier = "${var.dns_prefix}-Primary"
   records = ["${var.nlb_dns_name}"]
} 

resource "aws_route53_record" "main-standby" {
   zone_id          = data.aws_route53_zone.my_hosted_zone.zone_id
   name             = var.dns_prefix
   type             = "CNAME"
   ttl              = "60"
   depends_on       = [aws_route53_health_check.s3healthcheck]
   health_check_id = aws_route53_health_check.s3healthcheck.id
   failover_routing_policy {
       type = "SECONDARY"
   }
   set_identifier = "${var.dns_prefix}-Secondary"
   records = ["http://${var.s3_bucket_name}.s3-website-${var.region_name}.amazonaws.com"]
}
